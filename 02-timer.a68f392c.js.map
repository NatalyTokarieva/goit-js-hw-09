{"mappings":"YAgCsB,SAAbA,EAAIC,GACT,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MA3BjC,WACJ,IAAMC,EAAYC,KAAKC,MACvBC,aAAY,WACR,IAG4BC,EA0BhC,SAA2BC,GACvB,IAAMC,EAAQV,EACVW,KAAKC,MAAMH,EAAS,MAAyB,OAI3CI,EAAOb,EAAIW,KAAKC,MAAMH,EAAS,KAAoB,MACnDK,EAAOd,EAAIW,KAAKC,MAAMH,EAAS,IAAc,MAEnD,MAAO,CAACC,QAAOG,OAAMC,QAnCOC,CAHRV,KAAKC,MAEOF,GACzBM,EAAqBF,EAArBE,MAAOG,EAAcL,EAAdK,KAAMC,EAAQN,EAARM,KAIxBE,QAAQC,IAAI,GAAYC,OAATR,EAAM,KAAWQ,OAARL,EAAK,KAAQK,OAALJ,MAG9B,MAIFK,G","sources":["src/js/02-timer.js"],"sourcesContent":["// Описан в документации\n// import flatpickr from \"flatpickr\";\n// // Дополнительный импорт стилей\n// import \"flatpickr/dist/flatpickr.min.css\";\n\nconst timer = {\n    start(){\nconst startTime = Date.now();\nsetInterval(() => {\n    const currentTime = Date.now();\n\n    const deltaTime = currentTime - startTime;\n    const {hours, mins, secs} = getTimeComponents(deltaTime);\n\n    // console.log('start -> currentTime', currentTime);\n// console.log(timeComponents)\nconsole.log(`${hours}:${mins}:${secs}`) //правильній вівод\n    //console.log(currentTime - startTime);\n    \n},1000)\n },\n};\n\ntimer.start()\n\n//getUTCHours() - greenwitch- 0 paralel\n//функция которая\n//Принимает время в милисекундах\n//Вісчитівает сколько в них вмещается часов\\минут\\секунд\n//Повертає: обьєкт з властивостями hours, mins. secs\n// Адская копипаста со стека\n\nfunction pad(value){  //получает число и добавляет к нему знаки и приводит к строке  если берет 1 возвращает 01, \n    return String(value).padStart(2, '0');\n\n}\n\n\nfunction getTimeComponents(time){\n    const hours = pad(\n        Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n);\n    \n\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return {hours, mins, secs};\n}\n\n// const options = {\n    // enableTime: true, //Включает выбор времени\n//     time_24hr: true, //Отображает средство выбора времени в 24-часовом режиме без выбора AM/PM, если включено.\n//     defaultDate: new Date(), //Начальное значение элемента часа.\n//     minuteIncrement: 1, //Регулирует шаг ввода минут (включая прокрутку)\n    // onClose(selectedDates) {  //Функция(и) для запуска при каждом закрытии календаря. \n//       console.log(selectedDates[0]);\n//     },\n//   };\n\n\n\n// function convertMs(ms) {\n//     // Number of milliseconds per unit of time\n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n  \n//     // Remaining days\n//     const days = Math.floor(ms / day);\n//     // Remaining hours\n//     const hours = Math.floor((ms % day) / hour);\n//     // Remaining minutes\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     // Remaining seconds\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n//     return { days, hours, minutes, seconds };\n//   }\n  \n//   console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//   console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//   console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}"],"names":["$84b9dae4df53835d$var$pad","value","String","padStart","startTime","Date","now","setInterval","ref","time","hours","Math","floor","mins","secs","$84b9dae4df53835d$var$getTimeComponents","console","log","concat","$84b9dae4df53835d$var$timer"],"version":3,"file":"02-timer.a68f392c.js.map"}